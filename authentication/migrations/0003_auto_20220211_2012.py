# Generated by Django 4.0.2 on 2022-02-11 20:12
from django.db import migrations
from django.core.management.sql import emit_post_migrate_signal

def create_groups(apps, schema_migration):
    emit_post_migrate_signal(verbosity=1, interactive=False, db='default')
    User = apps.get_model('authentication', 'User')
    Group = apps.get_model('auth', 'Group')
    Permission = apps.get_model('auth', 'Permission')

    add_articles = Permission.objects.get(codename='add_articles')
    change_articles = Permission.objects.get(codename='change_articles')
    delete_articles= Permission.objects.get(codename='delete_articles')
    view_articles= Permission.objects.get(codename='view_articles')
    premium_articles = Permission.objects.get(codename = 'premium_articles')

    creator_permissions = [
        add_articles,
        change_articles,
        delete_articles,
        view_articles,
    ]

    subscriber_permissions = [
        view_articles,
    ]

    creators = Group(name='creators')
    creators.save()
    
    creators.permissions.set(creator_permissions)

    subscribers = Group(name='subscribers')
    subscribers.save()
    subscribers.permissions.set(subscriber_permissions)

    premiums = Group(name = 'premiums')
    premiums.save()
    premiums.permissions.add(premium_articles)

    for user in User.objects.all():
        if user.role == 'CREATOR':
            creators.user_set.add(user)
        if user.role == 'SUBSCRIBER':
            subscribers.user_set.add(user)
        if user.is_premium == True:
            premiums.user_set(user)

class Migration(migrations.Migration):

    dependencies = [
        ('authentication', '0002_remove_user_profil_photo_user_can_post_user_follows_and_more'),
    ]

    operations = [
        migrations.RunPython(create_groups)
    ]
